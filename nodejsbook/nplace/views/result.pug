extends layout

block content
  h1= `${query}검색 결과(${results.length})`
  #map
  script.
    const positions = [];
  for result in results
    script.
      positions.push({
        lat: #{result.geometry.location.lat},
        lng: #{result.geometry.location.lng},
        name: '#{result.name}',
        id: '#{result.place_id}'
      });
  script.
    function initMap() {
      let center = positions[0] || { lat: 37.540705, lng: 126.956764 };
      let map = new google.maps.Map(document.getElementById('map'), {
        zoom: 15,
        center: center
      });

      positions.forEach(pos => {
        const marker = new google.maps.Marker({
          position: { lat: pos.lat, lng: pos.lng },
          map: map,
          title: pos.name
        });

        const div = document.createElement('div'),
              h2 = document.createElement('h2'),
              button = document.createElement('button');

        h2.textContent = pos.name;
        button.classList.add('btn');
        button.textContent = '즐겨찾기 추가';
        button.onclick = () => {
          const xhr = new XMLHttpRequest();

          xhr.onload = () => {
            if (xhr.status === 200) {
              location.href = '/';
            }
          };
          xhr.open('POST', `/location/${pos.id}/favorite`);
          xhr.setRequestHeader('Content-Type', 'application/json');
          xhr.send(JSON.stringify({
            name: pos.name,
            lat: pos.lat,
            lng: pos.lng
          }));
        }

        div.appendChild(h2);
        div.appendChild(button);

        const infowindow = new google.maps.InfoWindow({ content: div });

        marker.addListener('click', () => {
          infowindow.open(map, marker);
        });
      });
    }
  script(
    async
    defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAlXFV0meWJx4dlmxHJ-aujUtks3sTLwsw&callback=initMap")