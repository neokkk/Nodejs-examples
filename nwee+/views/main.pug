extends layout

block content
    .main
        if user && user.id
            .main-header
                h2= '타임라인'
                form.main-header-form(action='/post/hashtag')
                    span
                        i.fa.fa-search
                    input(type='search' placeholder='해시태그 검색')
            if twits
                for twit in twits
                    .main-post
                        input.twit-user-id(type='hidden' value= twit.userId)
                        input.twit-post-id(type='hidden' value= twit.postId)
                        .main-post-profile
                            img.main-post-profile-image(src= twit.imgUrl)
                            .main-post-profile-name= twit.nickname
                            if user.id !== twit.userId && !follow
                                button.main-post-follow= '팔로우'
                            if user.id !== twit.userId && follow
                                button.main-post-unfollow= '언팔로우'
                        .main-post-wrap
                            .main-post-comment= twit.postContent
                            if twit.postImgUrl
                                img.main-post-img(src= twit.postImgUrl)
                            .main-post-detail
                                if twit.userId === user.id
                                    a.main-post-delete= '지우기'
                                else
                                    a.main-post-delete= ''
                                span= twit.postCreatedAt.toDateString()

    script.

        // delete post btn
        document.querySelectorAll('.main-post-delete').forEach(value => {
            value.addEventListener('click', () => {
                const isLoggedIn = document.querySelector('#my-id');

                if (isLoggedIn) {
                    const twitId = value.parentNode.parentNode.parentNode.querySelector('.twit-post-id').value;
                    const twitUserId = value.parentNode.parentNode.parentNode.querySelector('.twit-user-id').value;
                    const myId = isLoggedIn.value;

                    if (twitUserId === myId) {
                        if (confirm('게시물을 지우시겠습니까?')) {
                            axios
                                .delete(`/post/${twitId}`)
                                .catch(err => {
                                     console.error(err);
                                     if (err.response) {
                                         console.log(err.response);
                                     } else if (err.request) {
                                         console.log(err.request);
                                     } else {
                                         console.log(err.message);
                                     }
                                });
                        }
                    }
                }
            });
        });

        // follow btn
        document.querySelectorAll('.main-post-follow').forEach(value => {
            value.addEventListener('click', () => {
                const isLoggedIn = document.querySelector('#my-id');

                if (isLoggedIn) {
                    const twitUserId = value.parentNode.parentNode.querySelector('.twit-user-id').value;
                    const myId = isLoggedIn.value;

                    if (twitUserId !== myId) {
                        if (confirm('팔로우 하시겠습니까?')) {
                            axios.post(`/user/${twitUserId}/follow`);
                        }
                    }
                }
            });
        });

        // unfollow btn
        document.querySelectorAll('.main-post-unfollow').forEach(value => {
            value.addEventListener('click', () => {
                const isLoggedIn = document.querySelector('#my-id');

                if (isLoggedIn) {
                    const twitUserId = value.parentNode.parentNode.querySelector('.twit-user-id').value;
                    const myId = isLoggedIn.value;

                    if (twitUserId !== myId) {
                        if (confirm('언팔로우 하시겠습니까?')) {
                            axios.delete(`/user/${twitUserId}/follow`);
                        }
                    }
                }
            });
        });